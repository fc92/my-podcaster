#!/usr/bin/env python
# -*- coding: utf-8 -*-


import signal
import time

import touchphat
import subprocess

from mplayer import Player, Step

import os

'''webradios list'''
playlist_dir='/home/f/gPodder/Playlists'
podcast_playlists=os.listdir (playlist_dir)
radios_url=['http://direct.franceinfo.fr/live/franceinfo-midfi.mp3',
	"http://live02.rfi.fr/rfimonde-96k.mp3",
	"http://direct.fipradio.fr/live/fip-midfi.mp3",
	"http://ais-live.cloud-services.paris:8000/europe1.mp3",
	"http://bfmbusiness.cdn.dvmr.fr/bfmbusiness",
	]

''' access to mplayer '''
out=open("/tmp/podcaster.out","a")
err=open("/tmp/podcaster.err","a")
p=Player(stdout=out, stderr=err)
radios_it=iter(radios_url)
podcast_it=iter(podcast_playlists)

''' access bluetooth device name for volume '''
volume=100
bt_name=subprocess.Popen("bluetoothctl info | awk  -F \": \" '/Name/ {print $2}'", \
	shell=True, stdout=subprocess.PIPE).communicate()[0].decode('ascii').rstrip()
print("BT device name = "+bt_name)
#bt_address=subprocess.check_output("bluetoothctl info | awk  -F " " '/Device/ {print $2}'")


print("""

Touch pHAT: Buttons Demo & mplayer bluetooth
rely on linux mplayer -> alsa -> bluealsa a2dp source -> bluetooth for audio
rely on gPodder for podcast management
intially designed for Raspberry Pi Zero W 1.1 + Raspbian Buster Lite

Lights up each LED in turn, then detects your button presses.

Press Ctrl+C to exit!

""")

for pad in ['Back','A','B','C','D','Enter']:
    touchphat.set_led(pad, True)
    time.sleep(0.1)
    touchphat.set_led(pad, False)
    time.sleep(0.1)

def lit(txt):
	"""lit le texte"""
	cmd='espeak -v fr+m1 "'+txt+'" --stdout | aplay'
	os.system(cmd)

def next_radio():
	"""return the URL of next webradio"""
	global radios_it
	try:
		radio=next(radios_it)
		print(radio)
		return radio
	except StopIteration:
		"""loop on radio list"""
		radios_it=iter(radios_url)
		return next_radio()

def next_podcast():
	"""return the path to next podcast playlist file"""
	global podcast_it, playlist_dir, podcast_playlists
	try:
		nextpodcast=next(podcast_it)
		# lit("lecture du podcast "+nextpodcast)
		podcast=playlist_dir+'/'+nextpodcast
		print(podcast)
		return podcast
	except StopIteration:
		"""refresh podcast list when the end of the list is reached"""
		podcast_playlists=os.listdir (playlist_dir)
		podcast_it=iter(podcast_playlists)
		return next_podcast()
def volume_apply():
	""" apply new volume value to bluetooth speaker via bluealsa """
	global bt_name, volume
	cmd = "amixer -D bluealsa sset '"+bt_name+" - A2DP' "+str(volume)+'%'
	print (cmd)
#		cmd += ' 2>&1 >/dev/null'
	subprocess.check_output(cmd, shell=True)

def volume_up():
	"""increase the volume by 10% if possible"""
	global volume
	if (volume < 91):
		volume+=10
		volume_apply()

def volume_down():
	"""decrease the volume by 10% if possible"""
	global volume
	if (volume > 9):
		volume-=10
		volume_apply()
	
@touchphat.on_touch(['A','B'])
def handle_webradio(event):
	""" when button A is pressed play next webradio
	when button B is pressed play next playing list (generated by gPodder for podcasts)
	TO DO when button Enter is pressed play next webradio/episode"""
	global p
	if event.name == 'A':
		p.loadfile(next_radio())
	elif event.name == 'B':
		p.loadlist(next_podcast())
	print (p.filename)

@touchphat.on_touch(['C','D'])
def handle_volume(event):
	""" manage volume decrease and increase commands from buttons C and D"""
	if event.name == 'C':
		volume_down()
	elif event.name == 'D':
		volume_up()

@touchphat.on_touch(['Back'])
def handle_pause(event):
	"""button Back allows to pause/resume current audio stream"""
	global p
	print("play/pause")
	p.pause()

signal.pause()
